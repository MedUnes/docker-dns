#!/bin/bash
set -e

PATH=/usr/sbin:/usr/bin:/sbin:/bin
SERVICE=docker-dns
DOCKER_DNS_CONFIG=/etc/docker-dns/docker-dns.conf
BACKUP_DIR=/var/lib/docker-dns/backup
RESOLVED_DROPIN=/etc/systemd/resolved.conf.d/docker-dns.conf
DNSMASQ_DROPIN=/etc/dnsmasq.d/99-docker-dns.conf
UNBOUND_DROPIN=/etc/unbound/unbound.d/docker-dns.conf
NM_DROPIN=/etc/NetworkManager/conf.d/90-docker-dns.conf
RESOLV_CONF_FILE=/etc/resolv.conf

mkdir -p "$BACKUP_DIR"

read_conf() {
    grep -E "^$1=" "$DOCKER_DNS_CONFIG" 2>/dev/null | head -n1 | cut -d= -f2
}
IP=$(read_conf IP)
TLD=$(read_conf TLD)
DEFAULT_RESOLVER=$(read_conf DEFAULT_RESOLVER)

if [ -z "$IP" ] || [ -z "$TLD" ]; then
    echo "docker‑dns: IP= and/or TLD= not defined in $DOCKER_DNS_CONFIG ; aborting."
    exit 1
fi

confirm() {
    if [ "$DEBIAN_FRONTEND" = "noninteractive" ]; then
        echo "noninteractive mode detected, proceeding with full integration.."
        return 0
    fi
    printf "%s [y/N] " "$1"
    read -r answer
    [ "$answer" = "y" ] || [ "$answer" = "Y" ]
}

setcap CAP_NET_BIND_SERVICE=+eip /usr/bin/$SERVICE
systemctl daemon-reload
systemctl enable --now "$SERVICE.service"

if systemctl is-active --quiet systemd-resolved; then
    STACK=resolved
elif pgrep -x dnsmasq >/dev/null; then
    STACK=dnsmasq
elif pgrep -x unbound >/dev/null; then
    STACK=unbound
else
    STACK=plain
fi

echo "docker‑dns installer detected resolver stack: $STACK"

if ! confirm "Integrate $SERVICE with $STACK resolver?"; then
    echo "Skipped DNS integration – service still running on $IP:53"
    echo "More Info on: https://github.com/MedUnes/docker-dns/blob/master/README.md"
    exit 0
fi

timestamp=$(date +%s)

case $STACK in
resolved)
    [ -f "$RESOLVED_DROPIN" ] && \
        cp -a "$RESOLVED_DROPIN" "$BACKUP_DIR/resolved.conf.$timestamp"
    cat >"$RESOLVED_DROPIN" <<EOF
[Resolve]
DNS=$IP
Domains=~$TLD ~.
DNSSEC=no
FallbackDNS=${DEFAULT_RESOLVER//,/ }
EOF

    [ -f "$NM_DROPIN" ] || cat >"$NM_DROPIN" <<EOF
[main]
dns=systemd-resolved
[connection]
ipv4.ignore-auto-dns=true
ipv6.ignore-auto-dns=true
EOF

    systemctl restart systemd-resolved NetworkManager
    systemctl daemon-reload
    ;;

dnsmasq)
    [ -f "$DNSMASQ_DROPIN" ] && \
        cp -a "$DNSMASQ_DROPIN" "$BACKUP_DIR/dnsmasq.$timestamp"

    echo "server=/$TLD/$IP" >"$DNSMASQ_DROPIN"
    systemctl reload dnsmasq
    systemctl daemon-reload
    ;;

unbound)
    [ -f "$UNBOUND_DROPIN" ] && \
        cp -a "$UNBOUND_DROPIN" "$BACKUP_DIR/unbound.$timestamp"

    cat >"$UNBOUND_DROPIN" <<EOF
local-zone: "$TLD." transparent
stub-zone:
    name: "$TLD."
    stub-addr: $IP@53
EOF
    unbound-control reload || true
    ;;

plain)
    cp -a "$RESOLV_CONF_FILE" "$BACKUP_DIR/resolv.conf.$timestamp"

    sed -i "\|$IP|d" "$RESOLV_CONF_FILE"
    printf 'nameserver %s\n%s' "$IP" "$(cat "$RESOLV_CONF_FILE")" >"$RESOLV_CONF_FILE"
    ;;

esac

if [ "$STACK" = "resolved" ]; then
    target=/run/systemd/resolve/stub-resolv.conf
    if [ "$(readlink $RESOLV_CONF_FILE)" != "$target" ]; then
        mv /etc/resolv.conf "$BACKUP_DIR/resolv.conf.$timestamp"
        ln -sf "$target" $RESOLV_CONF_FILE
    fi
fi

echo "docker‑dns: integration finished."
exit 0
