#!/bin/bash
set -e

PATH=/usr/sbin:/usr/bin:/sbin:/bin
SERVICE=docker-dns
DOCKER_DNS_CONFIG=/etc/docker-dns/docker-dns.conf
BACKUP_DIR=/var/lib/docker-dns/backup
RESOLVED_DROPIN=/etc/systemd/resolved.conf.d/docker-dns.conf
NM_DROPIN=/etc/NetworkManager/conf.d/90-docker-dns.conf
RESOLV_CONF_FILE=/etc/resolv.conf

mkdir -p "$BACKUP_DIR"

read_conf() {
    grep -E "^$1=" "$DOCKER_DNS_CONFIG" 2>/dev/null | head -n1 | cut -d= -f2
}
IP=$(read_conf IP)
TLD=$(read_conf TLD)
DEFAULT_RESOLVER=$(read_conf DEFAULT_RESOLVER)

if [ -z "$IP" ] || [ -z "$TLD" ]; then
    echo "docker‑dns: IP= and/or TLD= not defined in $DOCKER_DNS_CONFIG ; aborting."
    exit 1
fi

setcap CAP_NET_BIND_SERVICE=+eip /usr/bin/$SERVICE
systemctl daemon-reload
systemctl enable --now "$SERVICE.service"

if systemctl is-active --quiet systemd-resolved; then
    echo "docker‑dns installer detected systemd-resolved active - proceeding with integration"
    systemctl stop systemd-resolved
    if [ ! -d /etc/systemd/resolved.conf.d ]; then
        echo "Creating /etc/systemd/resolved.conf.d folder.."
        mkdir -p /etc/systemd/resolved.conf.d
    else
        echo "Detected an already existing folder /etc/systemd/resolved.conf.d"
    fi
    timestamp=$(date +%s)

    [ -f "$RESOLVED_DROPIN" ] && cp -a "$RESOLVED_DROPIN" "$BACKUP_DIR/resolved.conf.$timestamp"
    cat >"$RESOLVED_DROPIN" <<EOF
[Resolve]
DNS=$IP
Domains=~$TLD ~.
DNSSEC=no
FallbackDNS=${DEFAULT_RESOLVER//,/ }
EOF
    target=/run/systemd/resolve/stub-resolv.conf
    if [ "$(readlink $RESOLV_CONF_FILE)" != "$target" ]; then
        cp "$RESOLV_CONF_FILE" "$BACKUP_DIR/resolv.conf.$timestamp"
        rm "$RESOLV_CONF_FILE"
        ln -sf "$target" "$RESOLV_CONF_FILE"
    fi
    if systemctl is-active --quiet NetworkManagerr; then
        echo "docker‑dns installer detected NetworkManagerr active - proceeding with integration"
        if [ ! -d /etc/NetworkManager/conf.d/ ]; then
            echo "Creating /etc/NetworkManager/conf.d/ folder.."
            mkdir -p /etc/NetworkManager/conf.d/
        else
            echo "Detected an already existing folder /etc/NetworkManager/conf.d/"
        fi
        [ -f "$NM_DROPIN" ] || cat >"$NM_DROPIN" <<EOF
[main]
dns=systemd-resolved
[connection]
ipv4.ignore-auto-dns=true
ipv6.ignore-auto-dns=true
EOF
    fi
    systemctl restart systemd-resolved NetworkManager
    systemctl daemon-reload

    echo "docker‑dns: systemd-resolved integration completed"
else
    echo "Well, as you don't have systemd-resolved, I will not do any extra integration steps. docker-dns will be listening on $IP and please consider integrating it manually on-demand to your host setup (for example add it to /etc/resolv.conf)"
fi
exit 0
