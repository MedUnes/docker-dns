name: Test Pipeline

on: [ push, pull_request ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Run Unit Tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

  integration-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
        options: --privileged
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Start Docker
        run: |
          docker version
          docker run -d --name test-nginx nginx:alpine

      - name: Run Integration Tests
        run: go run gotest.tools/gotestsum@latest --format=testdox -- -tags=integration -v

  debian-install-test:
    needs: [ integration-tests ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install test packages
        run: |
          sudo apt-get update
          sudo apt-get install -y bats dnsutils

      - name: Run systemd container using jrei/systemd-ubuntu
        run: |
          # Use a pre-built systemd container that's known to work
          docker run --name systemd-test -d --privileged \
            -v $(pwd):/app \
            -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
            --tmpfs /tmp --tmpfs /run --tmpfs /run/lock \
            jrei/systemd-ubuntu:22.04
          
          # Wait for container to initialize
          for i in {1..30}; do
            if docker exec systemd-test systemctl status &>/dev/null; then
              echo "systemd is running!"
              break
            fi
            echo "Waiting for systemd to initialize... $i/30"
            sleep 1
          
            # Show container logs for debugging
            echo "Container logs:"
            docker logs systemd-test
          done
          
          # Install necessary packages
          docker exec systemd-test apt-get update
          docker exec systemd-test apt-get install -y bats dnsutils curl systemd-resolved
          
          # Install Docker
          docker exec systemd-test bash -c "curl -fsSL https://get.docker.com | sh"
          
          # Enable systemd-resolved
          docker exec systemd-test systemctl enable systemd-resolved
          docker exec systemd-test systemctl start systemd-resolved
          
          # Confirm services are running
          docker exec systemd-test systemctl status systemd-resolved
          docker exec systemd-test docker --version
          
          # Setup for tests
          docker cp . systemd-test:/tests
          
          # Debug test files
          docker exec systemd-test ls -la /tests
          docker exec systemd-test cat /tests/tests/e2e_test.sh
          
          # Run tests
          docker exec systemd-test bash -c "cd /tests && bats tests/e2e_test.sh || true"

      - name: Get diagnostic information
        if: always()
        run: |
          echo "=== Docker container status ==="
          docker ps -a
          
          echo "=== Container logs ==="
          docker logs systemd-test || true
          
          echo "=== systemd status ==="
          docker exec systemd-test systemctl status || true
          
          echo "=== systemd-resolved status ==="
          docker exec systemd-test systemctl status systemd-resolved || true
          
          echo "=== journalctl output ==="
          docker exec systemd-test journalctl -n 50 || true

      - name: Cleanup
        if: always()
        run: docker rm -f systemd-test || true